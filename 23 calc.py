

"""
https://contest.yandex.ru/contest/45468/problems/23

23. Калькулятор
Ограничение времени	2 секунды
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Имеется калькулятор, который выполняет следующие операции:

умножить число X на 2;
умножить число X на 3;
прибавить к числу X единицу.
Определите, какое наименьшее количество операций требуется, чтобы получить из числа 1 число N.

Формат ввода
Во входном файле написано натуральное число N, не превосходящее 106.

Формат вывода
В первой строке выходного файла выведите минимальное количество операций. Во второй строке выведите числа,
последовательно получающиеся при выполнении операций. Первое из них должно быть равно 1, а последнее N.
Если решений несколько, выведите любое.
"""


def calc(n):
    if n == 1:
        return 0, []

    elif n == 2:
        return 1, [0, 0, 1, 0]

    elif n == 3:
        return 1, [0, 0, 0, 1]

    dp = [0 for _ in range(n+1)]
    dp[0] = 0
    dp[1] = 0
    dp[2] = 1
    dp[3] = 1

    for i in range(4, n+1):
        l = [dp[i - 1]]
        if i % 2 == 0:
            l.append(dp[i // 2])
        if i % 3 == 0:
            l.append(dp[i // 3])
        dp[i] = min(l) + 1

    i = n
    while i != 1:
        for j in range(i-1, 0, -1):
            if dp[j] == dp[i] - 1 and (i - 1 == j or j * 2 == i or j * 3 == i):
                i = j
                break
            else:
                dp[j] = 0
    return dp[n], dp


n = int(input())
a, m = calc(n)
print(a)
#print(" ".join(map(str, m)))

print(1, end=' ')
for i, e in enumerate(m):
    if e != 0:
        print(i, end=' ')
print()


test = {
    1: (0, [1]),
    3: (1, []),
    5: (3, [1, 3, 4, 5]),
    962340: (17, [1, 2, 6, 18, 54, 55, 165, 495, 1485, 4455, 8910, 17820, 17821, 53463, 160389, 160390, 481170, 962340]),


}

for n, (a, l) in test.items():
    print('\ntest', n)
    r, lr = calc(n)

    la = [1]
    for i, e in enumerate(lr):
        if e != 0:
            la.append(i)

    if a != r or l != la:
        print('\t!!!error', a, l, r, la)
