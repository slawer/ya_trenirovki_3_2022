

"""
https://contest.yandex.ru/contest/45469/problems/9/

Вам необходимо ответить на запросы узнать сумму всех элементов числовой матрицы N×M в прямоугольнике с левым верхним углом (x1, y1) и правым нижним (x2, y2)

Формат ввода
В первой строке находится числа N, M размеры матрицы (1 ≤ N, M ≤ 1000) и K — количество запросов (1 ≤ K ≤ 100000).
Каждая из следующих N строк содержит по M чисел`— элементы соответствующей строки матрицы
(по модулю не превосходят 1000). Последующие K строк содержат по 4 целых числа, разделенных пробелом x1 y1 x2 y2 —
запрос на сумму элементов матрице в прямоугольнике (1 ≤ x1 ≤ x2 ≤ N, 1 ≤ y1 ≤ y2 ≤ M)

Формат вывода
Для каждого запроса на отдельной строке выведите его результат — сумму всех чисел в элементов матрице
в прямоугольнике (x1, y1), (x2, y2)

тест
3 3 2
1 2 3
4 5 6
7 8 9
2 2 3 3
1 1 2 3

ответ
28
21
"""

"""
на префиксные сумм
но не простые а двумерные

простое решение рабботает медленнл

на полумедленном языке можно было посчитать префиксные суммы по строкам 
и использовать их

в таблице преф суммы считаются по диагонали i и j

путем вычитания сумм прямогоьнико ввзятых от точки 0, 0

логику можно расширить на любые измерения

погуглить "интегральное изображение"
"""


# from collections import defaultdict

n, m, k = map(int, input().split())
l = []
for _ in range(n):
    l.append([int(c) for c in input().split()])

a = []
for _ in range(k):
    a.append([int(c) for c in input().split()])

# сумма построчная
s = []
for il in l:
    sm = 0
    s.append([])
    for e in il:
        sm += e
        s[-1].append(sm)

for x, y, x1, y1 in a:
    sm = 0
    for il in s[x-1:x1]:
        sm += il[y1-1]
        if y - 2 > -1:
            sm -= il[y-2]

    print(sm)

exit(0)

# --------------------------------------------------


for x, y, x1, y1 in a:
    s = 0
    for i in range(x-1, x1):
            s += sum(l[i][y-1:y1])
        #for j in range(y-1, y1):
        #    s += l[i][j]
            # print(l[i][j])
    print(s)




